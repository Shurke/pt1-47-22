"""
Порядковая дата содержит номер года и порядковый номер дня в этом году – оба в
целочисленном формате. При этом год может быть любым согласно григорианскому
календарю, а номер дня – числом в интервале от 1 до 366 (чтобы учесть високосные
годы). Порядковые даты удобно использовать при расчете разницы в днях, когда
счет ведется именно в днях, а не месяцах. Например, это может касаться
90-дневного периода возврата товара для покупателей, расчета срока годности
товаров или прогнозируемой даты появления малыша на свет.
Напишите функцию с именем ordinal_date, принимающую на вход три целых числа:
день, месяц и год. Функция должна возвращать порядковый номер заданного дня в
указанном году. В основной программе у пользователя должны запрашиваться день,
месяц и год соответственно и выводиться на экран порядковый номер дня в заданном
году. Программа должна запускаться только в том случае, если она не
импортирована в виде модуля в другой файл.
"""


from calendar import isleap


def ordinal_date(date, month, year):
    """Вычисляет порядковый номер дня в заданном году

    :param date: День
    :param month: Месяц
    :param year: Год
    :return: Порядковый номер дня

    """

    dict_month = {1: 31, 2: 28, 3: 31, 4: 30, 5: 31, 6: 30, 7: 31, 8: 31, 9: 30,
                  10: 31, 11: 30, 12: 31}

    if __name__ == "__main__":
        if date > 31 or month > 12:
            return "Не существует такой даты или месяца"
        if month == 1:
            return date
        res_month = sum(dict_month[x] for x in range(1, month))
        result = res_month + date
        if isleap(year):
            if month == 2:
                return result
            return result + 1
        return result


d = int(input("Введите день натуральным числом: "))
m = int(input("Введите месяц натуральным числом: "))
y = int(input("Введите год натуральным числом: "))
print(ordinal_date(d, m, y))
