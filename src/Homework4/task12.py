"""Как ясно из названия, римские цифры появились еще в Древнем Риме.
Но даже после падения Римской империи они продолжали использоваться
на территории Европы вплоть до позднего Средневековья, а в определенных
случаях применяются и сегодня. Римские цифры базируются на обозначениях
M, D, C, L, X, V и I, соответствующих числам 1000, 500, 100, 50, 10, 5
и 1. В основном римские цифры в составляющих их числах располагаются в
порядке убывания – от больших к меньшим. В этом случае итоговое число
равно сумме всех составляющих его римских цифр. Если цифры меньшего
номинала предшествуют цифрам большего номинала, то первые вычитаются из
вторых и итог прибавляется к общей сумме. В такой манере могут использоваться
римские цифры C, X и I. При этом вычитание производится только из чисел,
максимум в десять раз превосходящих вычитаемое. Таким образом, цифра I может
предшествовать V или X, но не может вычитаться из L, C, D или M. А значит, число
99 должно быть написано как XCIX, а не IC. Создайте рекурсивную функцию, которая
будет переводить римскую запись чисел в десятичную. Функция должна обрабатывать
один или два символа в начале строки, после чего будет производиться ее
рекурсивный вызов для оставшихся символов. Используйте пустую строку с
возвращаемым значением 0 в качестве базового случая. Также напишите основную
программу, которая будет запрашивать у пользователя число, введенное римскими
цифрами, и отображать его десятичный эквивалент. При этом можно сделать допуск
о том, что пользователь всегда вводит корректное число, так что обработку ошибок
вам реализовывать не нужно."""


def rome_to_arabian(rome):

    """Данная функция преобразует римские числа в арабские."""

    num_1 = {"I": 1, "V": 5, "X": 10, "L": 50, "C": 100, "D": 500, "M": 1000}
    if rome == "":
        return 0
    else:
        if len(rome) == 1:
            return num_1[rome]
        elif len(rome) >= 2:
            if num_1[rome[1]] > num_1[rome[0]] and num_1[rome[1]] / num_1[rome[0]] <= 10:
                total = num_1[rome[1]] - num_1[rome[0]]
                summ = rome_to_arabian(rome[2:])
                summ = summ + total
            elif num_1[rome[0]] >= num_1[rome[1]]:
                summ = rome_to_arabian(rome[1:])
                summ = summ + num_1[rome[:1]]
            else:
                return " Ваши данные некорректны"
    return summ


my_num = input("Введите римское число\n").upper()
print(f"ваше число соотвествует \n{rome_to_arabian(my_num)}")
