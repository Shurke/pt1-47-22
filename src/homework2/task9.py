""" 9. Все подсписки заданного списка
Используя определение подсписка из задачи #8, напишите программу, возвращающую список, содержащий
все возможные подсписки заданного.
Например, в число подсписков списка [1, 2, 3] входят следую-щие:
[], [1], [2], [3], [1, 2], [2, 3] и [1, 2, 3].
Заметьте, что ваша программа должна вернуть как минимум один пустой список,
гарантированно являющийся подсписком для любого списка.
"""


def get_sublists(list_: list) -> list:
    """Возвращает все возможные подсписки для списка lst

    :param list lst: список для обработки

    :returns: список возможных подсписков
    :rtype: list
    """
    result = [[]]
    lst_len = len(list_)
    for length in range(0, lst_len):
        for pos in range(0, lst_len - length):
            result.append(list_[pos:pos + length + 1])
    return result


TEST_CASES = [
    [],
    [1],
    [1, 2],
    [1, 2, 3, 4],
    [1, 2, 3, 4, 5],
    [1, 2, 3],
]
for test in TEST_CASES:
    print(f"Подсписки списка {test}: {get_sublists(test)}")
